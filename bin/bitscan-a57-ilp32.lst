   1              		.arch armv8-a
   2              		.file	"bitscan.c"
   3              		.text
   4              		.section	.text.startup,"ax",@progbits
   5              		.align	2
   6              		.p2align 4,,15
   7              		.global	main
   8              		.type	main, %function
   9              	main:
  10              	.LFB26:
  11              		.cfi_startproc
  12 0000 01000090 		adrp	x1, .LC0
  13 0004 00000090 		adrp	x0, .LC1
  14 0008 FD7BBDA9 		stp	x29, x30, [sp, -48]!
  15              		.cfi_def_cfa_offset 48
  16              		.cfi_offset 29, -48
  17              		.cfi_offset 30, -40
  18 000c 21000011 		add	w1, w1, :lo12:.LC0
  19 0010 FD030091 		mov	x29, sp
  20 0014 02048052 		mov	w2, 32
  21 0018 00000011 		add	w0, w0, :lo12:.LC1
  22 001c F35301A9 		stp	x19, x20, [sp, 16]
  23              		.cfi_offset 19, -32
  24              		.cfi_offset 20, -24
  25 0020 14000090 		adrp	x20, .LC3
  26 0024 94020011 		add	w20, w20, :lo12:.LC3
  27 0028 33008052 		mov	w19, 1
  28 002c 00000094 		bl	printf
  29 0030 01000090 		adrp	x1, .LC2
  30 0034 E003142A 		mov	w0, w20
  31 0038 21000011 		add	w1, w1, :lo12:.LC2
  32 003c 02018052 		mov	w2, 8
  33 0040 00000094 		bl	printf
  34 0044 01000090 		adrp	x1, .LC4
  35 0048 E003142A 		mov	w0, w20
  36 004c 21000011 		add	w1, w1, :lo12:.LC4
  37 0050 02018052 		mov	w2, 8
  38 0054 00000094 		bl	printf
  39 0058 01000090 		adrp	x1, .LC5
  40 005c E203132A 		mov	w2, w19
  41 0060 E003142A 		mov	w0, w20
  42 0064 21000011 		add	w1, w1, :lo12:.LC5
  43 0068 00000094 		bl	printf
  44 006c 03000090 		adrp	x3, :got:stdout
  45 0070 00000090 		adrp	x0, .LC6
  46 0074 630040B9 		ldr	w3, [x3, #:got_lo12:stdout]
  47 0078 22038052 		mov	w2, 25
  48 007c E103132A 		mov	w1, w19
  49 0080 00000011 		add	w0, w0, :lo12:.LC6
  50 0084 630040B9 		ldr	w3, [x3]
  51 0088 00000094 		bl	fwrite
  52 008c 00000090 		adrp	x0, .LC7
  53 0090 E1A30011 		add	w1, wsp, 40
  54 0094 00000011 		add	w0, w0, :lo12:.LC7
  55 0098 00000094 		bl	__isoc99_scanf
  56 009c E12B40B9 		ldr	w1, [sp, 40]
  57 00a0 00000090 		adrp	x0, .LC8
  58 00a4 00000011 		add	w0, w0, :lo12:.LC8
  59 00a8 00000094 		bl	printf
  60 00ac 00000090 		adrp	x0, .LC9
  61 00b0 E303132A 		mov	w3, w19
  62 00b4 E11740F9 		ldr	x1, [sp, 40]
  63 00b8 00000011 		add	w0, w0, :lo12:.LC9
  64              	#APP
  65              	// 457 "bitscan.h" 1
  66 00bc 2200C05A 		rbit	w2,w1
  67 00c0 4210C05A 		clz	w2,w2
  68 00c4 6314424B 		sub	w3,w3,w2,lsr #5
  69              	// 0 "" 2
  70              	#NO_APP
  71 00c8 631C0012 		and	w3, w3, 255
  72 00cc 00000094 		bl	printf
  73 00d0 E11740F9 		ldr	x1, [sp, 40]
  74 00d4 00000090 		adrp	x0, .LC10
  75 00d8 E303132A 		mov	w3, w19
  76 00dc E2038052 		mov	w2, 31
  77 00e0 00000011 		add	w0, w0, :lo12:.LC10
  78 00e4 E403012A 		mov	w4, w1
  79              	#APP
  80              	// 489 "bitscan.h" 1
  81 00e8 8410C05A 		clz	w4,w4
  82 00ec 4200044B 		sub	w2,w2,w4
  83 00f0 6314444B 		sub	w3,w3,w4,lsr #5
  84              	// 0 "" 2
  85              	#NO_APP
  86 00f4 631C0012 		and	w3, w3, 255
  87 00f8 00000094 		bl	printf
  88 00fc 00000090 		adrp	x0, .LC11
  89 0100 00000011 		add	w0, w0, :lo12:.LC11
  90 0104 E11740F9 		ldr	x1, [sp, 40]
  91 0108 00000094 		bl	printf
  92 010c 00000090 		adrp	x0, .LC12
  93 0110 E303132A 		mov	w3, w19
  94 0114 E11740F9 		ldr	x1, [sp, 40]
  95 0118 00000011 		add	w0, w0, :lo12:.LC12
  96              	#APP
  97              	// 473 "bitscan.h" 1
  98 011c 2200C0DA 		rbit	x2,x1
  99 0120 4210C0DA 		clz	x2,x2
 100 0124 631842CB 		sub	x3,x3,x2,lsr #6
 101              	// 0 "" 2
 102              	#NO_APP
 103 0128 631C0012 		and	w3, w3, 255
 104 012c 00000094 		bl	printf
 105 0130 E41740F9 		ldr	x4, [sp, 40]
 106 0134 E2078052 		mov	w2, 63
 107 0138 00000090 		adrp	x0, .LC13
 108 013c 00000011 		add	w0, w0, :lo12:.LC13
 109 0140 E10304AA 		mov	x1, x4
 110              	#APP
 111              	// 505 "bitscan.h" 1
 112 0144 8410C0DA 		clz	x4,x4
 113 0148 420004CB 		sub	x2,x2,x4
 114 014c 731A44CB 		sub	x19,x19,x4,lsr #6
 115              	// 0 "" 2
 116              	#NO_APP
 117 0150 631E0012 		and	w3, w19, 255
 118 0154 00000094 		bl	printf
 119 0158 00008052 		mov	w0, 0
 120 015c F35341A9 		ldp	x19, x20, [sp, 16]
 121 0160 FD7BC3A8 		ldp	x29, x30, [sp], 48
 122              		.cfi_restore 30
 123              		.cfi_restore 29
 124              		.cfi_restore 19
 125              		.cfi_restore 20
 126              		.cfi_def_cfa_offset 0
 127 0164 C0035FD6 		ret
 128              		.cfi_endproc
 129              	.LFE26:
 130              		.size	main, .-main
 131              		.section	.rodata.str1.8,"aMS",@progbits,1
 132              		.align	3
 133              	.LC0:
 134 0000 574F5244 		.string	"WORDSIZE"
 134      53495A45 
 134      00
 135 0009 00000000 		.zero	7
 135      000000
 136              	.LC1:
 137 0010 0A252D31 		.string	"\n%-12s : %u\n"
 137      3273203A 
 137      2025750A 
 137      00
 138 001d 000000   		.zero	3
 139              	.LC2:
 140 0020 5F49535F 		.string	"_IS_ARM"
 140      41524D00 
 141              	.LC3:
 142 0028 252D3132 		.string	"%-12s : %u\n"
 142      73203A20 
 142      25750A00 
 143 0034 00000000 		.zero	4
 144              	.LC4:
 145 0038 5F49535F 		.string	"_IS_THUMB"
 145      5448554D 
 145      4200
 146 0042 00000000 		.zero	6
 146      0000
 147              	.LC5:
 148 0048 5F49535F 		.string	"_IS_ARM64"
 148      41524D36 
 148      3400
 149 0052 00000000 		.zero	6
 149      0000
 150              	.LC6:
 151 0058 0A496E70 		.string	"\nInput unsigned integer> "
 151      75742075 
 151      6E736967 
 151      6E656420 
 151      696E7465 
 152 0072 00000000 		.zero	6
 152      0000
 153              	.LC7:
 154 0078 256C6C75 		.string	"%llu"
 154      00
 155 007d 000000   		.zero	3
 156              	.LC8:
 157 0080 0A33322D 		.string	"\n32-bit input value: %lu\n"
 157      62697420 
 157      696E7075 
 157      74207661 
 157      6C75653A 
 158 009a 00000000 		.zero	6
 158      0000
 159              	.LC9:
 160 00a0 5F426974 		.string	"_BitScanForward( %lu ): %u (Success=%u)\n"
 160      5363616E 
 160      466F7277 
 160      61726428 
 160      20256C75 
 161 00c9 00000000 		.zero	7
 161      000000
 162              	.LC10:
 163 00d0 5F426974 		.string	"_BitScanReverse( %lu ): %u (Success=%u)\n"
 163      5363616E 
 163      52657665 
 163      72736528 
 163      20256C75 
 164 00f9 00000000 		.zero	7
 164      000000
 165              	.LC11:
 166 0100 0A36342D 		.string	"\n64-bit input value: %llu\n"
 166      62697420 
 166      696E7075 
 166      74207661 
 166      6C75653A 
 167 011b 00000000 		.zero	5
 167      00
 168              	.LC12:
 169 0120 5F426974 		.string	"_BitScanForward64( %llu ): %u (Success=%u)\n"
 169      5363616E 
 169      466F7277 
 169      61726436 
 169      34282025 
 170 014c 00000000 		.zero	4
 171              	.LC13:
 172 0150 5F426974 		.string	"_BitScanReverse64( %llu ): %u (Success=%u)\n"
 172      5363616E 
 172      52657665 
 172      72736536 
 172      34282025 
 173              		.ident	"GCC: (Debian 8.3.0-6) 8.3.0"
 174              		.section	.note.GNU-stack,"",@progbits
