   1              		.arch armv8-a
   2              		.file	"bitscan.c"
   3              		.text
   4              		.section	.text.startup,"ax",@progbits
   5              		.align	2
   6              		.p2align 4,,15
   7              		.global	main
   8              		.type	main, %function
   9              	main:
  10              	.LFB26:
  11              		.cfi_startproc
  12 0000 FD7BBDA9 		stp	x29, x30, [sp, -48]!
  13              		.cfi_def_cfa_offset 48
  14              		.cfi_offset 29, -48
  15              		.cfi_offset 30, -40
  16 0004 02048052 		mov	w2, 32
  17 0008 01000090 		adrp	x1, .LC0
  18 000c FD030091 		mov	x29, sp
  19 0010 21000011 		add	w1, w1, :lo12:.LC0
  20 0014 00000090 		adrp	x0, .LC1
  21 0018 00000011 		add	w0, w0, :lo12:.LC1
  22 001c F30B00F9 		str	x19, [sp, 16]
  23              		.cfi_offset 19, -32
  24 0020 00000094 		bl	printf
  25 0024 13000090 		adrp	x19, .LC3
  26 0028 73020011 		add	w19, w19, :lo12:.LC3
  27 002c 02018052 		mov	w2, 8
  28 0030 E003132A 		mov	w0, w19
  29 0034 01000090 		adrp	x1, .LC2
  30 0038 21000011 		add	w1, w1, :lo12:.LC2
  31 003c 00000094 		bl	printf
  32 0040 E003132A 		mov	w0, w19
  33 0044 02018052 		mov	w2, 8
  34 0048 01000090 		adrp	x1, .LC4
  35 004c 21000011 		add	w1, w1, :lo12:.LC4
  36 0050 00000094 		bl	printf
  37 0054 E003132A 		mov	w0, w19
  38 0058 22008052 		mov	w2, 1
  39 005c 01000090 		adrp	x1, .LC5
  40 0060 21000011 		add	w1, w1, :lo12:.LC5
  41 0064 00000094 		bl	printf
  42 0068 03000090 		adrp	x3, :got:stdout
  43 006c 22038052 		mov	w2, 25
  44 0070 21008052 		mov	w1, 1
  45 0074 00000090 		adrp	x0, .LC6
  46 0078 630040B9 		ldr	w3, [x3, #:got_lo12:stdout]
  47 007c F303012A 		mov	w19, w1
  48 0080 00000011 		add	w0, w0, :lo12:.LC6
  49 0084 630040B9 		ldr	w3, [x3]
  50 0088 00000094 		bl	fwrite
  51 008c E1A30011 		add	w1, wsp, 40
  52 0090 00000090 		adrp	x0, .LC7
  53 0094 00000011 		add	w0, w0, :lo12:.LC7
  54 0098 00000094 		bl	__isoc99_scanf
  55 009c E12B40B9 		ldr	w1, [sp, 40]
  56 00a0 00000090 		adrp	x0, .LC8
  57 00a4 00000011 		add	w0, w0, :lo12:.LC8
  58 00a8 00000094 		bl	printf
  59 00ac E11740F9 		ldr	x1, [sp, 40]
  60 00b0 E303132A 		mov	w3, w19
  61 00b4 00000090 		adrp	x0, .LC9
  62 00b8 00000011 		add	w0, w0, :lo12:.LC9
  63              	#APP
  64              	// 457 "bitscan.h" 1
  65 00bc 2200C05A 		rbit	w2,w1
  66 00c0 4210C05A 		clz	w2,w2
  67 00c4 6314424B 		sub	w3,w3,w2,lsr #5
  68              	// 0 "" 2
  69              	#NO_APP
  70 00c8 631C0012 		and	w3, w3, 255
  71 00cc 00000094 		bl	printf
  72 00d0 E11740F9 		ldr	x1, [sp, 40]
  73 00d4 E303132A 		mov	w3, w19
  74 00d8 E2038052 		mov	w2, 31
  75 00dc 00000090 		adrp	x0, .LC10
  76 00e0 00000011 		add	w0, w0, :lo12:.LC10
  77 00e4 E403012A 		mov	w4, w1
  78              	#APP
  79              	// 489 "bitscan.h" 1
  80 00e8 8410C05A 		clz	w4,w4
  81 00ec 4200044B 		sub	w2,w2,w4
  82 00f0 6314444B 		sub	w3,w3,w4,lsr #5
  83              	// 0 "" 2
  84              	#NO_APP
  85 00f4 631C0012 		and	w3, w3, 255
  86 00f8 00000094 		bl	printf
  87 00fc E11740F9 		ldr	x1, [sp, 40]
  88 0100 00000090 		adrp	x0, .LC11
  89 0104 00000011 		add	w0, w0, :lo12:.LC11
  90 0108 00000094 		bl	printf
  91 010c E11740F9 		ldr	x1, [sp, 40]
  92 0110 E303132A 		mov	w3, w19
  93 0114 00000090 		adrp	x0, .LC12
  94 0118 00000011 		add	w0, w0, :lo12:.LC12
  95              	#APP
  96              	// 473 "bitscan.h" 1
  97 011c 2200C0DA 		rbit	x2,x1
  98 0120 4210C0DA 		clz	x2,x2
  99 0124 631842CB 		sub	x3,x3,x2,lsr #6
 100              	// 0 "" 2
 101              	#NO_APP
 102 0128 631C0012 		and	w3, w3, 255
 103 012c 00000094 		bl	printf
 104 0130 E41740F9 		ldr	x4, [sp, 40]
 105 0134 E2078052 		mov	w2, 63
 106 0138 00000090 		adrp	x0, .LC13
 107 013c 00000011 		add	w0, w0, :lo12:.LC13
 108 0140 E10304AA 		mov	x1, x4
 109              	#APP
 110              	// 505 "bitscan.h" 1
 111 0144 8410C0DA 		clz	x4,x4
 112 0148 420004CB 		sub	x2,x2,x4
 113 014c 731A44CB 		sub	x19,x19,x4,lsr #6
 114              	// 0 "" 2
 115              	#NO_APP
 116 0150 631E0012 		and	w3, w19, 255
 117 0154 00000094 		bl	printf
 118 0158 00008052 		mov	w0, 0
 119 015c F30B40F9 		ldr	x19, [sp, 16]
 120 0160 FD7BC3A8 		ldp	x29, x30, [sp], 48
 121              		.cfi_restore 30
 122              		.cfi_restore 29
 123              		.cfi_restore 19
 124              		.cfi_def_cfa_offset 0
 125 0164 C0035FD6 		ret
 126              		.cfi_endproc
 127              	.LFE26:
 128              		.size	main, .-main
 129              		.section	.rodata.str1.8,"aMS",@progbits,1
 130              		.align	3
 131              	.LC0:
 132 0000 574F5244 		.string	"WORDSIZE"
 132      53495A45 
 132      00
 133 0009 00000000 		.zero	7
 133      000000
 134              	.LC1:
 135 0010 0A252D31 		.string	"\n%-12s : %u\n"
 135      3273203A 
 135      2025750A 
 135      00
 136 001d 000000   		.zero	3
 137              	.LC2:
 138 0020 5F49535F 		.string	"_IS_ARM"
 138      41524D00 
 139              	.LC3:
 140 0028 252D3132 		.string	"%-12s : %u\n"
 140      73203A20 
 140      25750A00 
 141 0034 00000000 		.zero	4
 142              	.LC4:
 143 0038 5F49535F 		.string	"_IS_THUMB"
 143      5448554D 
 143      4200
 144 0042 00000000 		.zero	6
 144      0000
 145              	.LC5:
 146 0048 5F49535F 		.string	"_IS_ARM64"
 146      41524D36 
 146      3400
 147 0052 00000000 		.zero	6
 147      0000
 148              	.LC6:
 149 0058 0A496E70 		.string	"\nInput unsigned integer> "
 149      75742075 
 149      6E736967 
 149      6E656420 
 149      696E7465 
 150 0072 00000000 		.zero	6
 150      0000
 151              	.LC7:
 152 0078 256C6C75 		.string	"%llu"
 152      00
 153 007d 000000   		.zero	3
 154              	.LC8:
 155 0080 0A33322D 		.string	"\n32-bit input value: %lu\n"
 155      62697420 
 155      696E7075 
 155      74207661 
 155      6C75653A 
 156 009a 00000000 		.zero	6
 156      0000
 157              	.LC9:
 158 00a0 5F426974 		.string	"_BitScanForward( %lu ): %u (Success=%u)\n"
 158      5363616E 
 158      466F7277 
 158      61726428 
 158      20256C75 
 159 00c9 00000000 		.zero	7
 159      000000
 160              	.LC10:
 161 00d0 5F426974 		.string	"_BitScanReverse( %lu ): %u (Success=%u)\n"
 161      5363616E 
 161      52657665 
 161      72736528 
 161      20256C75 
 162 00f9 00000000 		.zero	7
 162      000000
 163              	.LC11:
 164 0100 0A36342D 		.string	"\n64-bit input value: %llu\n"
 164      62697420 
 164      696E7075 
 164      74207661 
 164      6C75653A 
 165 011b 00000000 		.zero	5
 165      00
 166              	.LC12:
 167 0120 5F426974 		.string	"_BitScanForward64( %llu ): %u (Success=%u)\n"
 167      5363616E 
 167      466F7277 
 167      61726436 
 167      34282025 
 168 014c 00000000 		.zero	4
 169              	.LC13:
 170 0150 5F426974 		.string	"_BitScanReverse64( %llu ): %u (Success=%u)\n"
 170      5363616E 
 170      52657665 
 170      72736536 
 170      34282025 
 171              		.ident	"GCC: (Debian 8.3.0-6) 8.3.0"
 172              		.section	.note.GNU-stack,"",@progbits
