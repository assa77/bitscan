   1              		.cpu arm1156t2-s
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 2
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"bitscan.c"
  13              		.text
  14              		.section	.text.startup,"ax",%progbits
  15              		.align	1
  16              		.p2align 2,,3
  17              		.global	main
  18              		.arch armv6t2
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu vfp
  23              		.type	main, %function
  24              	main:
  25              		@ args = 0, pretend = 0, frame = 8
  26              		@ frame_needed = 0, uses_anonymous_args = 0
  27 0000 30B5     		push	{r4, r5, lr}
  28 0002 0124     		movs	r4, #1
  29 0004 2449     		ldr	r1, .L4
  30 0006 2548     		ldr	r0, .L4+4
  31 0008 83B0     		sub	sp, sp, #12
  32 000a 2022     		movs	r2, #32
  33              	.LPIC0:
  34 000c 7944     		add	r1, pc
  35 000e 244D     		ldr	r5, .L4+8
  36              	.LPIC1:
  37 0010 7844     		add	r0, pc
  38 0012 FFF7FEFF 		bl	printf(PLT)
  39 0016 2349     		ldr	r1, .L4+12
  40              	.LPIC3:
  41 0018 7D44     		add	r5, pc
  42 001a 2846     		mov	r0, r5
  43 001c 0622     		movs	r2, #6
  44              	.LPIC2:
  45 001e 7944     		add	r1, pc
  46 0020 FFF7FEFF 		bl	printf(PLT)
  47 0024 2049     		ldr	r1, .L4+16
  48 0026 2846     		mov	r0, r5
  49 0028 0422     		movs	r2, #4
  50              	.LPIC4:
  51 002a 7944     		add	r1, pc
  52 002c FFF7FEFF 		bl	printf(PLT)
  53 0030 1E49     		ldr	r1, .L4+20
  54 0032 2246     		mov	r2, r4
  55 0034 2846     		mov	r0, r5
  56              	.LPIC6:
  57 0036 7944     		add	r1, pc
  58 0038 FFF7FEFF 		bl	printf(PLT)
  59 003c 1C4B     		ldr	r3, .L4+24
  60 003e 1D49     		ldr	r1, .L4+28
  61              	.LPIC8:
  62 0040 7B44     		add	r3, pc
  63 0042 1D48     		ldr	r0, .L4+32
  64 0044 5B58     		ldr	r3, [r3, r1]
  65 0046 1922     		movs	r2, #25
  66 0048 2146     		mov	r1, r4
  67 004a 1B68     		ldr	r3, [r3]
  68              	.LPIC9:
  69 004c 7844     		add	r0, pc
  70 004e FFF7FEFF 		bl	fwrite(PLT)
  71 0052 1A48     		ldr	r0, .L4+36
  72 0054 6946     		mov	r1, sp
  73              	.LPIC10:
  74 0056 7844     		add	r0, pc
  75 0058 FFF7FEFF 		bl	__isoc99_scanf(PLT)
  76 005c 1848     		ldr	r0, .L4+40
  77 005e 0099     		ldr	r1, [sp]
  78 0060 2346     		mov	r3, r4
  79              		.syntax unified
  80              	@ 551 "bitscan.h" 1
  81 0062 91FAA1F2 		rbit	r2,r1
  82 0066 B2FA82F2 		clz	r2,r2
  83 006a A3EB5213 		sub	r3,r3,r2,lsr #5
  84              	@ 0 "" 2
  85              		.thumb
  86              		.syntax unified
  87              	.LPIC11:
  88 006e 7844     		add	r0, pc
  89 0070 DBB2     		uxtb	r3, r3
  90 0072 FFF7FEFF 		bl	printf(PLT)
  91 0076 0099     		ldr	r1, [sp]
  92 0078 1F22     		movs	r2, #31
  93 007a 0846     		mov	r0, r1
  94              		.syntax unified
  95              	@ 588 "bitscan.h" 1
  96 007c B0FA80F0 		clz	r0,r0
  97 0080 A2EB0002 		sub	r2,r2,r0
  98 0084 A4EB5014 		sub	r4,r4,r0,lsr #5
  99              	@ 0 "" 2
 100              		.thumb
 101              		.syntax unified
 102 0088 0E48     		ldr	r0, .L4+44
 103 008a E3B2     		uxtb	r3, r4
 104              	.LPIC12:
 105 008c 7844     		add	r0, pc
 106 008e FFF7FEFF 		bl	printf(PLT)
 107 0092 0020     		movs	r0, #0
 108 0094 03B0     		add	sp, sp, #12
 109              		@ sp needed
 110 0096 30BD     		pop	{r4, r5, pc}
 111              	.L5:
 112              		.align	2
 113              	.L4:
 114 0098 88000000 		.word	.LC0-(.LPIC0+4)
 115 009c 88000000 		.word	.LC1-(.LPIC1+4)
 116 00a0 84000000 		.word	.LC3-(.LPIC3+4)
 117 00a4 82000000 		.word	.LC2-(.LPIC2+4)
 118 00a8 7A000000 		.word	.LC4-(.LPIC4+4)
 119 00ac 72000000 		.word	.LC5-(.LPIC6+4)
 120 00b0 6C000000 		.word	_GLOBAL_OFFSET_TABLE_-(.LPIC8+4)
 121 00b4 00000000 		.word	stdout(GOT)
 122 00b8 68000000 		.word	.LC6-(.LPIC9+4)
 123 00bc 62000000 		.word	.LC7-(.LPIC10+4)
 124 00c0 4E000000 		.word	.LC8-(.LPIC11+4)
 125 00c4 34000000 		.word	.LC9-(.LPIC12+4)
 126              		.size	main, .-main
 127              		.section	.rodata.str1.4,"aMS",%progbits,1
 128              		.align	2
 129              	.LC0:
 130 0000 574F5244 		.ascii	"WORDSIZE\000"
 130      53495A45 
 130      00
 131 0009 000000   		.space	3
 132              	.LC1:
 133 000c 0A252D31 		.ascii	"\012%-12s : %u\012\000"
 133      3273203A 
 133      2025750A 
 133      00
 134 0019 000000   		.space	3
 135              	.LC2:
 136 001c 5F49535F 		.ascii	"_IS_ARM\000"
 136      41524D00 
 137              	.LC3:
 138 0024 252D3132 		.ascii	"%-12s : %u\012\000"
 138      73203A20 
 138      25750A00 
 139              	.LC4:
 140 0030 5F49535F 		.ascii	"_IS_THUMB\000"
 140      5448554D 
 140      4200
 141 003a 0000     		.space	2
 142              	.LC5:
 143 003c 5F49535F 		.ascii	"_IS_IN_THUMB\000"
 143      494E5F54 
 143      48554D42 
 143      00
 144 0049 000000   		.space	3
 145              	.LC6:
 146 004c 0A496E70 		.ascii	"\012Input unsigned integer> \000"
 146      75742075 
 146      6E736967 
 146      6E656420 
 146      696E7465 
 147 0066 0000     		.space	2
 148              	.LC7:
 149 0068 256C6C75 		.ascii	"%llu\000"
 149      00
 150 006d 000000   		.space	3
 151              	.LC8:
 152 0070 0A5F4269 		.ascii	"\012_BitScanForward( %lu ): %u (Success=%u)\012\000"
 152      74536361 
 152      6E466F72 
 152      77617264 
 152      2820256C 
 153 009a 0000     		.space	2
 154              	.LC9:
 155 009c 5F426974 		.ascii	"_BitScanReverse( %lu ): %u (Success=%u)\012\000"
 155      5363616E 
 155      52657665 
 155      72736528 
 155      20256C75 
 156              		.ident	"GCC: (Debian 8.3.0-2) 8.3.0"
 157              		.section	.note.GNU-stack,"",%progbits
