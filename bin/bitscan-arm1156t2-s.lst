   1              		.cpu arm1156t2-s
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 23, 1
   4              		.eabi_attribute 24, 1
   5              		.eabi_attribute 25, 1
   6              		.eabi_attribute 26, 2
   7              		.eabi_attribute 30, 2
   8              		.eabi_attribute 34, 1
   9              		.eabi_attribute 18, 4
  10              		.file	"bitscan.c"
  11              		.text
  12              		.section	.text.startup,"ax",%progbits
  13              		.align	2
  14              		.global	main
  15              		.arch armv6t2
  16              		.syntax unified
  17              		.arm
  18              		.fpu vfp
  19              		.type	main, %function
  20              	main:
  21              		@ args = 0, pretend = 0, frame = 8
  22              		@ frame_needed = 0, uses_anonymous_args = 0
  23 0000 30402DE9 		push	{r4, r5, lr}
  24 0004 005000E3 		movw	r5, #:lower16:stdout
  25 0008 000000E3 		movw	r0, #:lower16:.LC0
  26 000c 005040E3 		movt	r5, #:upper16:stdout
  27 0010 0CD04DE2 		sub	sp, sp, #12
  28 0014 003095E5 		ldr	r3, [r5]
  29 0018 5D20A0E3 		mov	r2, #93
  30 001c 0110A0E3 		mov	r1, #1
  31 0020 000040E3 		movt	r0, #:upper16:.LC0
  32 0024 004000E3 		movw	r4, #:lower16:.LC2
  33 0028 FEFFFFEB 		bl	fwrite
  34 002c 001000E3 		movw	r1, #:lower16:.LC1
  35 0030 004040E3 		movt	r4, #:upper16:.LC2
  36 0034 0400A0E1 		mov	r0, r4
  37 0038 001040E3 		movt	r1, #:upper16:.LC1
  38 003c 2020A0E3 		mov	r2, #32
  39 0040 FEFFFFEB 		bl	printf
  40 0044 001000E3 		movw	r1, #:lower16:.LC3
  41 0048 0400A0E1 		mov	r0, r4
  42 004c 001040E3 		movt	r1, #:upper16:.LC3
  43 0050 0620A0E3 		mov	r2, #6
  44 0054 FEFFFFEB 		bl	printf
  45 0058 001000E3 		movw	r1, #:lower16:.LC4
  46 005c 0400A0E1 		mov	r0, r4
  47 0060 001040E3 		movt	r1, #:upper16:.LC4
  48 0064 0420A0E3 		mov	r2, #4
  49 0068 FEFFFFEB 		bl	printf
  50 006c 000000E3 		movw	r0, #:lower16:.LC5
  51 0070 003095E5 		ldr	r3, [r5]
  52 0074 1920A0E3 		mov	r2, #25
  53 0078 0110A0E3 		mov	r1, #1
  54 007c 000040E3 		movt	r0, #:upper16:.LC5
  55 0080 FEFFFFEB 		bl	fwrite
  56 0084 000000E3 		movw	r0, #:lower16:.LC6
  57 0088 0D10A0E1 		mov	r1, sp
  58 008c 000040E3 		movt	r0, #:upper16:.LC6
  59 0090 FEFFFFEB 		bl	__isoc99_scanf
  60 0094 000000E3 		movw	r0, #:lower16:.LC7
  61 0098 00109DE5 		ldr	r1, [sp]
  62 009c 000040E3 		movt	r0, #:upper16:.LC7
  63 00a0 FEFFFFEB 		bl	printf
  64 00a4 0140A0E3 		mov	r4, #1
  65 00a8 000000E3 		movw	r0, #:lower16:.LC8
  66 00ac 00109DE5 		ldr	r1, [sp]
  67 00b0 0430A0E1 		mov	r3, r4
  68 00b4 01C0A0E1 		mov	ip, r1
  69 00b8 1F20A0E3 		mov	r2, #31
  70              		.syntax divided
  71              	@ 1177 "bitscan.h" 1
  72 00bc 1CCF6FE1 		clz	ip,ip
  73 00c0 0C2042E0 		sub	r2,r2,ip
  74 00c4 AC3243E0 		sub	r3,r3,ip,lsr #5
  75              	@ 0 "" 2
  76              		.arm
  77              		.syntax unified
  78 00c8 000040E3 		movt	r0, #:upper16:.LC8
  79 00cc 7330EFE6 		uxtb	r3, r3
  80 00d0 FEFFFFEB 		bl	printf
  81 00d4 000000E3 		movw	r0, #:lower16:.LC9
  82 00d8 00109DE5 		ldr	r1, [sp]
  83 00dc 000040E3 		movt	r0, #:upper16:.LC9
  84              		.syntax divided
  85              	@ 1157 "bitscan.h" 1
  86 00e0 312FFFE6 		rbit	r2,r1
  87 00e4 122F6FE1 		clz	r2,r2
  88 00e8 A24244E0 		sub	r4,r4,r2,lsr #5
  89              	@ 0 "" 2
  90              		.arm
  91              		.syntax unified
  92 00ec 7430EFE6 		uxtb	r3, r4
  93 00f0 FEFFFFEB 		bl	printf
  94 00f4 0000A0E3 		mov	r0, #0
  95 00f8 0CD08DE2 		add	sp, sp, #12
  96              		@ sp needed
  97 00fc 3080BDE8 		pop	{r4, r5, pc}
  98              		.size	main, .-main
  99              		.section	.rodata.str1.4,"aMS",%progbits,1
 100              		.align	2
 101              	.LC0:
 102 0000 0A426974 		.ascii	"\012BitScan - Copyright (c) 2019 by Alexander M. Al"
 102      5363616E 
 102      202D2043 
 102      6F707972 
 102      69676874 
 103 0030 62657274 		.ascii	"bertian <assa@4ip.ru>.\012All rights reserved.\012\012"
 103      69616E20 
 103      3C617373 
 103      61403469 
 103      702E7275 
 104 005d 00       		.ascii	"\000"
 105 005e 0000     		.space	2
 106              	.LC1:
 107 0060 5F5F574F 		.ascii	"__WORDSIZE\000"
 107      52445349 
 107      5A4500
 108 006b 00       		.space	1
 109              	.LC2:
 110 006c 252D3132 		.ascii	"%-12s : %lu\012\000"
 110      73203A20 
 110      256C750A 
 110      00
 111 0079 000000   		.space	3
 112              	.LC3:
 113 007c 5F49535F 		.ascii	"_IS_ARM\000"
 113      41524D00 
 114              	.LC4:
 115 0084 5F49535F 		.ascii	"_IS_THUMB\000"
 115      5448554D 
 115      4200
 116 008e 0000     		.space	2
 117              	.LC5:
 118 0090 0A496E70 		.ascii	"\012Input unsigned integer> \000"
 118      75742075 
 118      6E736967 
 118      6E656420 
 118      696E7465 
 119 00aa 0000     		.space	2
 120              	.LC6:
 121 00ac 256C6C75 		.ascii	"%llu\000"
 121      00
 122 00b1 000000   		.space	3
 123              	.LC7:
 124 00b4 0A33322D 		.ascii	"\01232-bit input value: %lu\012\000"
 124      62697420 
 124      696E7075 
 124      74207661 
 124      6C75653A 
 125 00ce 0000     		.space	2
 126              	.LC8:
 127 00d0 5F425352 		.ascii	"_BSR32( %lu ): %u (Success=%u)\012\000"
 127      33322820 
 127      256C7520 
 127      293A2025 
 127      75202853 
 128              	.LC9:
 129 00f0 5F425346 		.ascii	"_BSF32( %lu ): %u (Success=%u)\012\000"
 129      33322820 
 129      256C7520 
 129      293A2025 
 129      75202853 
 130              		.ident	"GCC: (Raspbian 8.3.0-6+rpi1) 8.3.0"
 131              		.section	.note.GNU-stack,"",%progbits
