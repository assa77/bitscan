   1              		.arch armv7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 23, 1
   4              		.eabi_attribute 24, 1
   5              		.eabi_attribute 25, 1
   6              		.eabi_attribute 26, 2
   7              		.eabi_attribute 30, 2
   8              		.eabi_attribute 34, 1
   9              		.eabi_attribute 18, 4
  10              		.file	"bitscan.c"
  11              		.text
  12              		.section	.text.startup,"ax",%progbits
  13              		.align	1
  14              		.p2align 2,,3
  15              		.global	main
  16              		.arch armv7
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu vfp
  21              		.type	main, %function
  22              	main:
  23              		@ args = 0, pretend = 0, frame = 8
  24              		@ frame_needed = 0, uses_anonymous_args = 0
  25 0000 70B5     		push	{r4, r5, r6, lr}
  26 0002 40F20006 		movw	r6, #:lower16:stdout
  27 0006 C0F20006 		movt	r6, #:upper16:stdout
  28 000a 40F20005 		movw	r5, #:lower16:.LC2
  29 000e C0F20005 		movt	r5, #:upper16:.LC2
  30 0012 82B0     		sub	sp, sp, #8
  31 0014 3368     		ldr	r3, [r6]
  32 0016 5D22     		movs	r2, #93
  33 0018 0121     		movs	r1, #1
  34 001a 40F20000 		movw	r0, #:lower16:.LC0
  35 001e C0F20000 		movt	r0, #:upper16:.LC0
  36 0022 0124     		movs	r4, #1
  37 0024 FFF7FEFF 		bl	fwrite
  38 0028 2846     		mov	r0, r5
  39 002a 2022     		movs	r2, #32
  40 002c 40F20001 		movw	r1, #:lower16:.LC1
  41 0030 C0F20001 		movt	r1, #:upper16:.LC1
  42 0034 FFF7FEFF 		bl	printf
  43 0038 2846     		mov	r0, r5
  44 003a 0722     		movs	r2, #7
  45 003c 40F20001 		movw	r1, #:lower16:.LC3
  46 0040 C0F20001 		movt	r1, #:upper16:.LC3
  47 0044 FFF7FEFF 		bl	printf
  48 0048 2846     		mov	r0, r5
  49 004a 0422     		movs	r2, #4
  50 004c 40F20001 		movw	r1, #:lower16:.LC4
  51 0050 C0F20001 		movt	r1, #:upper16:.LC4
  52 0054 FFF7FEFF 		bl	printf
  53 0058 2246     		mov	r2, r4
  54 005a 2846     		mov	r0, r5
  55 005c 40F20001 		movw	r1, #:lower16:.LC5
  56 0060 C0F20001 		movt	r1, #:upper16:.LC5
  57 0064 FFF7FEFF 		bl	printf
  58 0068 3368     		ldr	r3, [r6]
  59 006a 1922     		movs	r2, #25
  60 006c 2146     		mov	r1, r4
  61 006e 40F20000 		movw	r0, #:lower16:.LC6
  62 0072 C0F20000 		movt	r0, #:upper16:.LC6
  63 0076 FFF7FEFF 		bl	fwrite
  64 007a 6946     		mov	r1, sp
  65 007c 40F20000 		movw	r0, #:lower16:.LC7
  66 0080 C0F20000 		movt	r0, #:upper16:.LC7
  67 0084 FFF7FEFF 		bl	__isoc99_scanf
  68 0088 0099     		ldr	r1, [sp]
  69 008a 40F20000 		movw	r0, #:lower16:.LC8
  70 008e C0F20000 		movt	r0, #:upper16:.LC8
  71 0092 FFF7FEFF 		bl	printf
  72 0096 009D     		ldr	r5, [sp]
  73 0098 2346     		mov	r3, r4
  74 009a 1F22     		movs	r2, #31
  75 009c 40F20000 		movw	r0, #:lower16:.LC9
  76 00a0 C0F20000 		movt	r0, #:upper16:.LC9
  77 00a4 2946     		mov	r1, r5
  78              		.syntax unified
  79              	@ 1177 "bitscan.h" 1
  80 00a6 B5FA85F5 		clz	r5,r5
  81 00aa A2EB0502 		sub	r2,r2,r5
  82 00ae A3EB5513 		sub	r3,r3,r5,lsr #5
  83              	@ 0 "" 2
  84              		.thumb
  85              		.syntax unified
  86 00b2 DBB2     		uxtb	r3, r3
  87 00b4 FFF7FEFF 		bl	printf
  88 00b8 0099     		ldr	r1, [sp]
  89 00ba 40F20000 		movw	r0, #:lower16:.LC10
  90 00be C0F20000 		movt	r0, #:upper16:.LC10
  91              		.syntax unified
  92              	@ 1157 "bitscan.h" 1
  93 00c2 91FAA1F2 		rbit	r2,r1
  94 00c6 B2FA82F2 		clz	r2,r2
  95 00ca A4EB5214 		sub	r4,r4,r2,lsr #5
  96              	@ 0 "" 2
  97              		.thumb
  98              		.syntax unified
  99 00ce E3B2     		uxtb	r3, r4
 100 00d0 FFF7FEFF 		bl	printf
 101 00d4 0020     		movs	r0, #0
 102 00d6 02B0     		add	sp, sp, #8
 103              		@ sp needed
 104 00d8 70BD     		pop	{r4, r5, r6, pc}
 105              		.size	main, .-main
 106 00da 00BF     		.section	.rodata.str1.4,"aMS",%progbits,1
 107              		.align	2
 108              	.LC0:
 109 0000 0A426974 		.ascii	"\012BitScan - Copyright (c) 2019 by Alexander M. Al"
 109      5363616E 
 109      202D2043 
 109      6F707972 
 109      69676874 
 110 0030 62657274 		.ascii	"bertian <assa@4ip.ru>.\012All rights reserved.\012\012"
 110      69616E20 
 110      3C617373 
 110      61403469 
 110      702E7275 
 111 005d 00       		.ascii	"\000"
 112 005e 0000     		.space	2
 113              	.LC1:
 114 0060 5F5F574F 		.ascii	"__WORDSIZE\000"
 114      52445349 
 114      5A4500
 115 006b 00       		.space	1
 116              	.LC2:
 117 006c 252D3132 		.ascii	"%-12s : %lu\012\000"
 117      73203A20 
 117      256C750A 
 117      00
 118 0079 000000   		.space	3
 119              	.LC3:
 120 007c 5F49535F 		.ascii	"_IS_ARM\000"
 120      41524D00 
 121              	.LC4:
 122 0084 5F49535F 		.ascii	"_IS_THUMB\000"
 122      5448554D 
 122      4200
 123 008e 0000     		.space	2
 124              	.LC5:
 125 0090 5F49535F 		.ascii	"_IS_IN_THUMB\000"
 125      494E5F54 
 125      48554D42 
 125      00
 126 009d 000000   		.space	3
 127              	.LC6:
 128 00a0 0A496E70 		.ascii	"\012Input unsigned integer> \000"
 128      75742075 
 128      6E736967 
 128      6E656420 
 128      696E7465 
 129 00ba 0000     		.space	2
 130              	.LC7:
 131 00bc 256C6C75 		.ascii	"%llu\000"
 131      00
 132 00c1 000000   		.space	3
 133              	.LC8:
 134 00c4 0A33322D 		.ascii	"\01232-bit input value: %lu\012\000"
 134      62697420 
 134      696E7075 
 134      74207661 
 134      6C75653A 
 135 00de 0000     		.space	2
 136              	.LC9:
 137 00e0 5F425352 		.ascii	"_BSR32( %lu ): %u (Success=%u)\012\000"
 137      33322820 
 137      256C7520 
 137      293A2025 
 137      75202853 
 138              	.LC10:
 139 0100 5F425346 		.ascii	"_BSF32( %lu ): %u (Success=%u)\012\000"
 139      33322820 
 139      256C7520 
 139      293A2025 
 139      75202853 
 140              		.ident	"GCC: (Raspbian 8.3.0-6+rpi1) 8.3.0"
 141              		.section	.note.GNU-stack,"",%progbits
