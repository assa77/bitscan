   1              		.cpu arm1136j-s
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 23, 1
   4              		.eabi_attribute 24, 1
   5              		.eabi_attribute 25, 1
   6              		.eabi_attribute 26, 2
   7              		.eabi_attribute 30, 2
   8              		.eabi_attribute 34, 1
   9              		.eabi_attribute 18, 4
  10              		.file	"bitscan.c"
  11              		.text
  12              		.section	.text.startup,"ax",%progbits
  13              		.align	2
  14              		.global	main
  15              		.arch armv6j
  16              		.syntax unified
  17              		.arm
  18              		.fpu vfp
  19              		.type	main, %function
  20              	main:
  21              		@ args = 0, pretend = 0, frame = 8
  22              		@ frame_needed = 0, uses_anonymous_args = 0
  23 0000 30402DE9 		push	{r4, r5, lr}
  24 0004 5D20A0E3 		mov	r2, #93
  25 0008 A4509FE5 		ldr	r5, .L4
  26 000c A4409FE5 		ldr	r4, .L4+4
  27 0010 0CD04DE2 		sub	sp, sp, #12
  28 0014 003095E5 		ldr	r3, [r5]
  29 0018 0110A0E3 		mov	r1, #1
  30 001c 98009FE5 		ldr	r0, .L4+8
  31 0020 FEFFFFEB 		bl	fwrite
  32 0024 0400A0E1 		mov	r0, r4
  33 0028 2020A0E3 		mov	r2, #32
  34 002c 8C109FE5 		ldr	r1, .L4+12
  35 0030 FEFFFFEB 		bl	printf
  36 0034 0400A0E1 		mov	r0, r4
  37 0038 0620A0E3 		mov	r2, #6
  38 003c 80109FE5 		ldr	r1, .L4+16
  39 0040 FEFFFFEB 		bl	printf
  40 0044 0400A0E1 		mov	r0, r4
  41 0048 0320A0E3 		mov	r2, #3
  42 004c 74109FE5 		ldr	r1, .L4+20
  43 0050 FEFFFFEB 		bl	printf
  44 0054 003095E5 		ldr	r3, [r5]
  45 0058 1920A0E3 		mov	r2, #25
  46 005c 0110A0E3 		mov	r1, #1
  47 0060 64009FE5 		ldr	r0, .L4+24
  48 0064 FEFFFFEB 		bl	fwrite
  49 0068 0D10A0E1 		mov	r1, sp
  50 006c 5C009FE5 		ldr	r0, .L4+28
  51 0070 FEFFFFEB 		bl	__isoc99_scanf
  52 0074 00109DE5 		ldr	r1, [sp]
  53 0078 54009FE5 		ldr	r0, .L4+32
  54 007c FEFFFFEB 		bl	printf
  55 0080 00C09DE5 		ldr	ip, [sp]
  56 0084 0130A0E3 		mov	r3, #1
  57 0088 0C10A0E1 		mov	r1, ip
  58 008c 1F20A0E3 		mov	r2, #31
  59 0090 40009FE5 		ldr	r0, .L4+36
  60              		.syntax divided
  61              	@ 1177 "bitscan.h" 1
  62 0094 1CCF6FE1 		clz	ip,ip
  63 0098 0C2042E0 		sub	r2,r2,ip
  64 009c AC3243E0 		sub	r3,r3,ip,lsr #5
  65              	@ 0 "" 2
  66              		.arm
  67              		.syntax unified
  68 00a0 7330EFE6 		uxtb	r3, r3
  69 00a4 FEFFFFEB 		bl	printf
  70 00a8 0000A0E3 		mov	r0, #0
  71 00ac 0CD08DE2 		add	sp, sp, #12
  72              		@ sp needed
  73 00b0 3080BDE8 		pop	{r4, r5, pc}
  74              	.L5:
  75              		.align	2
  76              	.L4:
  77 00b4 00000000 		.word	stdout
  78 00b8 6C000000 		.word	.LC2
  79 00bc 00000000 		.word	.LC0
  80 00c0 60000000 		.word	.LC1
  81 00c4 7C000000 		.word	.LC3
  82 00c8 84000000 		.word	.LC4
  83 00cc 90000000 		.word	.LC5
  84 00d0 AC000000 		.word	.LC6
  85 00d4 B4000000 		.word	.LC7
  86 00d8 D0000000 		.word	.LC8
  87              		.size	main, .-main
  88              		.section	.rodata.str1.4,"aMS",%progbits,1
  89              		.align	2
  90              	.LC0:
  91 0000 0A426974 		.ascii	"\012BitScan - Copyright (c) 2019 by Alexander M. Al"
  91      5363616E 
  91      202D2043 
  91      6F707972 
  91      69676874 
  92 0030 62657274 		.ascii	"bertian <assa@4ip.ru>.\012All rights reserved.\012\012"
  92      69616E20 
  92      3C617373 
  92      61403469 
  92      702E7275 
  93 005d 00       		.ascii	"\000"
  94 005e 0000     		.space	2
  95              	.LC1:
  96 0060 5F5F574F 		.ascii	"__WORDSIZE\000"
  96      52445349 
  96      5A4500
  97 006b 00       		.space	1
  98              	.LC2:
  99 006c 252D3132 		.ascii	"%-12s : %lu\012\000"
  99      73203A20 
  99      256C750A 
  99      00
 100 0079 000000   		.space	3
 101              	.LC3:
 102 007c 5F49535F 		.ascii	"_IS_ARM\000"
 102      41524D00 
 103              	.LC4:
 104 0084 5F49535F 		.ascii	"_IS_THUMB\000"
 104      5448554D 
 104      4200
 105 008e 0000     		.space	2
 106              	.LC5:
 107 0090 0A496E70 		.ascii	"\012Input unsigned integer> \000"
 107      75742075 
 107      6E736967 
 107      6E656420 
 107      696E7465 
 108 00aa 0000     		.space	2
 109              	.LC6:
 110 00ac 256C6C75 		.ascii	"%llu\000"
 110      00
 111 00b1 000000   		.space	3
 112              	.LC7:
 113 00b4 0A33322D 		.ascii	"\01232-bit input value: %lu\012\000"
 113      62697420 
 113      696E7075 
 113      74207661 
 113      6C75653A 
 114 00ce 0000     		.space	2
 115              	.LC8:
 116 00d0 5F425352 		.ascii	"_BSR32( %lu ): %u (Success=%u)\012\000"
 116      33322820 
 116      256C7520 
 116      293A2025 
 116      75202853 
 117              		.ident	"GCC: (Raspbian 8.3.0-6+rpi1) 8.3.0"
 118              		.section	.note.GNU-stack,"",%progbits
