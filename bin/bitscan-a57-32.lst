   1              		.cpu cortex-a57
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 23, 1
   4              		.eabi_attribute 24, 1
   5              		.eabi_attribute 25, 1
   6              		.eabi_attribute 26, 2
   7              		.eabi_attribute 30, 2
   8              		.eabi_attribute 34, 1
   9              		.eabi_attribute 18, 4
  10              		.file	"bitscan.c"
  11              		.text
  12              		.section	.text.startup,"ax",%progbits
  13              		.align	2
  14              		.global	main
  15              		.arch armv8-a
  16              		.arch_extension crc
  17              		.syntax unified
  18              		.arm
  19              		.fpu neon-fp-armv8
  20              		.type	main, %function
  21              	main:
  22              		@ args = 0, pretend = 0, frame = 8
  23              		@ frame_needed = 0, uses_anonymous_args = 0
  24 0000 FC406DE1 		strd	r4, [sp, #-12]!
  25 0004 005000E3 		movw	r5, #:lower16:stdout
  26 0008 005040E3 		movt	r5, #:upper16:stdout
  27 000c 5D20A0E3 		mov	r2, #93
  28 0010 0110A0E3 		mov	r1, #1
  29 0014 08E08DE5 		str	lr, [sp, #8]
  30 0018 000000E3 		movw	r0, #:lower16:.LC0
  31 001c 000040E3 		movt	r0, #:upper16:.LC0
  32 0020 003095E5 		ldr	r3, [r5]
  33 0024 0CD04DE2 		sub	sp, sp, #12
  34 0028 004000E3 		movw	r4, #:lower16:.LC2
  35 002c 004040E3 		movt	r4, #:upper16:.LC2
  36 0030 FEFFFFEB 		bl	fwrite
  37 0034 0400A0E1 		mov	r0, r4
  38 0038 2020A0E3 		mov	r2, #32
  39 003c 001000E3 		movw	r1, #:lower16:.LC1
  40 0040 001040E3 		movt	r1, #:upper16:.LC1
  41 0044 FEFFFFEB 		bl	printf
  42 0048 0400A0E1 		mov	r0, r4
  43 004c 0820A0E3 		mov	r2, #8
  44 0050 001000E3 		movw	r1, #:lower16:.LC3
  45 0054 001040E3 		movt	r1, #:upper16:.LC3
  46 0058 FEFFFFEB 		bl	printf
  47 005c 0400A0E1 		mov	r0, r4
  48 0060 0420A0E3 		mov	r2, #4
  49 0064 001000E3 		movw	r1, #:lower16:.LC4
  50 0068 001040E3 		movt	r1, #:upper16:.LC4
  51 006c FEFFFFEB 		bl	printf
  52 0070 0400A0E1 		mov	r0, r4
  53 0074 0120A0E3 		mov	r2, #1
  54 0078 001000E3 		movw	r1, #:lower16:.LC5
  55 007c 001040E3 		movt	r1, #:upper16:.LC5
  56 0080 FEFFFFEB 		bl	printf
  57 0084 1920A0E3 		mov	r2, #25
  58 0088 0110A0E3 		mov	r1, #1
  59 008c 003095E5 		ldr	r3, [r5]
  60 0090 000000E3 		movw	r0, #:lower16:.LC6
  61 0094 000040E3 		movt	r0, #:upper16:.LC6
  62 0098 FEFFFFEB 		bl	fwrite
  63 009c 0D10A0E1 		mov	r1, sp
  64 00a0 000000E3 		movw	r0, #:lower16:.LC7
  65 00a4 000040E3 		movt	r0, #:upper16:.LC7
  66 00a8 0140A0E3 		mov	r4, #1
  67 00ac FEFFFFEB 		bl	__isoc99_scanf
  68 00b0 000000E3 		movw	r0, #:lower16:.LC8
  69 00b4 000040E3 		movt	r0, #:upper16:.LC8
  70 00b8 00109DE5 		ldr	r1, [sp]
  71 00bc FEFFFFEB 		bl	printf
  72 00c0 00C09DE5 		ldr	ip, [sp]
  73 00c4 0430A0E1 		mov	r3, r4
  74 00c8 1F20A0E3 		mov	r2, #31
  75 00cc 000000E3 		movw	r0, #:lower16:.LC9
  76 00d0 000040E3 		movt	r0, #:upper16:.LC9
  77 00d4 0C10A0E1 		mov	r1, ip
  78              		.syntax divided
  79              	@ 1177 "bitscan.h" 1
  80 00d8 1CCF6FE1 		clz	ip,ip
  81 00dc 0C2042E0 		sub	r2,r2,ip
  82 00e0 AC3243E0 		sub	r3,r3,ip,lsr #5
  83              	@ 0 "" 2
  84              		.arm
  85              		.syntax unified
  86 00e4 7330EFE6 		uxtb	r3, r3
  87 00e8 FEFFFFEB 		bl	printf
  88 00ec 00109DE5 		ldr	r1, [sp]
  89 00f0 000000E3 		movw	r0, #:lower16:.LC10
  90 00f4 000040E3 		movt	r0, #:upper16:.LC10
  91              		.syntax divided
  92              	@ 1157 "bitscan.h" 1
  93 00f8 312FFFE6 		rbit	r2,r1
  94 00fc 122F6FE1 		clz	r2,r2
  95 0100 A24244E0 		sub	r4,r4,r2,lsr #5
  96              	@ 0 "" 2
  97              		.arm
  98              		.syntax unified
  99 0104 7430EFE6 		uxtb	r3, r4
 100 0108 FEFFFFEB 		bl	printf
 101 010c 0000A0E3 		mov	r0, #0
 102 0110 0CD08DE2 		add	sp, sp, #12
 103              		@ sp needed
 104 0114 D040CDE1 		ldrd	r4, [sp]
 105 0118 08D08DE2 		add	sp, sp, #8
 106 011c 04F09DE4 		ldr	pc, [sp], #4
 107              		.size	main, .-main
 108              		.section	.rodata.str1.4,"aMS",%progbits,1
 109              		.align	2
 110              	.LC0:
 111 0000 0A426974 		.ascii	"\012BitScan - Copyright (c) 2019 by Alexander M. Al"
 111      5363616E 
 111      202D2043 
 111      6F707972 
 111      69676874 
 112 0030 62657274 		.ascii	"bertian <assa@4ip.ru>.\012All rights reserved.\012\012"
 112      69616E20 
 112      3C617373 
 112      61403469 
 112      702E7275 
 113 005d 00       		.ascii	"\000"
 114 005e 0000     		.space	2
 115              	.LC1:
 116 0060 5F5F574F 		.ascii	"__WORDSIZE\000"
 116      52445349 
 116      5A4500
 117 006b 00       		.space	1
 118              	.LC2:
 119 006c 252D3132 		.ascii	"%-12s : %lu\012\000"
 119      73203A20 
 119      256C750A 
 119      00
 120 0079 000000   		.space	3
 121              	.LC3:
 122 007c 5F49535F 		.ascii	"_IS_ARM\000"
 122      41524D00 
 123              	.LC4:
 124 0084 5F49535F 		.ascii	"_IS_THUMB\000"
 124      5448554D 
 124      4200
 125 008e 0000     		.space	2
 126              	.LC5:
 127 0090 5F49535F 		.ascii	"_IS_NEON\000"
 127      4E454F4E 
 127      00
 128 0099 000000   		.space	3
 129              	.LC6:
 130 009c 0A496E70 		.ascii	"\012Input unsigned integer> \000"
 130      75742075 
 130      6E736967 
 130      6E656420 
 130      696E7465 
 131 00b6 0000     		.space	2
 132              	.LC7:
 133 00b8 256C6C75 		.ascii	"%llu\000"
 133      00
 134 00bd 000000   		.space	3
 135              	.LC8:
 136 00c0 0A33322D 		.ascii	"\01232-bit input value: %lu\012\000"
 136      62697420 
 136      696E7075 
 136      74207661 
 136      6C75653A 
 137 00da 0000     		.space	2
 138              	.LC9:
 139 00dc 5F425352 		.ascii	"_BSR32( %lu ): %u (Success=%u)\012\000"
 139      33322820 
 139      256C7520 
 139      293A2025 
 139      75202853 
 140              	.LC10:
 141 00fc 5F425346 		.ascii	"_BSF32( %lu ): %u (Success=%u)\012\000"
 141      33322820 
 141      256C7520 
 141      293A2025 
 141      75202853 
 142              		.ident	"GCC: (Raspbian 8.3.0-6+rpi1) 8.3.0"
 143              		.section	.note.GNU-stack,"",%progbits
